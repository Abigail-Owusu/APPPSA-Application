# Generated by Django 4.2.6 on 2023-11-04 20:28

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "other_names",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "maiden_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("email", models.EmailField(max_length=200, unique=True)),
                ("password", models.CharField(max_length=200)),
                ("nationality", models.CharField(max_length=200)),
                ("postal_code", models.CharField(max_length=20)),
                ("zip_code", models.CharField(blank=True, max_length=20, null=True)),
                ("city", models.CharField(max_length=100)),
                ("district", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=150)),
                ("profession", models.CharField(max_length=200)),
                ("current_organization", models.CharField(max_length=200)),
                ("dob", models.DateField()),
                ("tel_code", models.CharField(max_length=20)),
                ("telephone", models.CharField(max_length=20, unique=True)),
                (
                    "additional_tel",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("first_name_next_of_kin", models.CharField(max_length=200)),
                ("last_name_next_of_kin", models.CharField(max_length=200)),
                ("tel_next_of_kin", models.CharField(max_length=20)),
                ("year_group1", models.IntegerField()),
                ("year_group2", models.IntegerField(blank=True, null=True)),
                ("chapter1", models.CharField(max_length=200)),
                ("chapter2", models.CharField(blank=True, max_length=200, null=True)),
                ("chapter3", models.CharField(blank=True, max_length=200, null=True)),
                ("house1", models.CharField(max_length=200)),
                ("house2", models.CharField(blank=True, max_length=200, null=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
